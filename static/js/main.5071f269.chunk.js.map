{"version":3,"sources":["components/MovieScreen.jsx","components/ChristmasCard_1.jsx","components/ChristmasCard_2.jsx","components/ChristmasCard_3.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MovieScreen","title","className","autoPlay","loop","muted","src","process","type","ChristmasCard_1","card","useState","switcz","onClick","alt","ChristmasCard_2","useEffect","timeoutId","setTimeout","clearTimeout","ChristmasCard_3","App","setCard","handleCardNumber","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAeeA,EAbK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,mCACE,uBAAOC,UAAU,WAAWC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAA/C,SACE,wBACEC,IAAKC,kBAAA,kBAAoCN,EAApC,QACLO,KAAK,mBCuBAC,EA5BS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACRC,oBAAS,GADD,mBAC7BC,EAD6B,UAMpC,OACE,mCACE,sBAAKV,UAAU,YAAf,UACE,cAAC,EAAD,CAAaD,MAAM,kBACnB,sBAAKY,QAA0BH,EAAOR,UAAU,YAAhD,UACE,qBACEA,UAAWU,EAAS,SAAW,YAC/BN,IAAKC,iCACLO,IAAI,QAEN,qBACEZ,UAAWU,EAAS,YAAc,SAClCN,IAAKC,gCACLO,IAAI,UAGR,oBAAID,QAASH,EAAb,0ECJOK,EAlBS,SAAC,GAAc,IAAZL,EAAW,EAAXA,KASzB,OARAM,qBAAU,WACR,IAAMC,EAAYC,YAAW,WAE3B,OADAR,IACO,WACLS,aAAaF,MAEd,OACF,IAED,mCACE,qBAAKf,UAAU,YAAf,SACE,cAAC,EAAD,CAAaD,MAAM,uBCFZmB,EAVS,SAAC,GAAa,EAAXV,KACzB,OACE,mCACE,qBAAKR,UAAU,YAAf,SACE,cAAC,EAAD,CAAaD,MAAM,uB,MCcZoB,MAff,WAAgB,IAAD,EACWV,mBAAS,GADpB,mBACND,EADM,KACAY,EADA,KAGPC,EAAmB,WACvBD,GAAQ,SAACE,GAAD,OAAeA,EAAY,MAErC,OACE,qCACY,IAATd,GAAc,cAAC,EAAD,CAAiBA,KAAMa,IAC5B,IAATb,GAAc,cAAC,EAAD,CAAiBA,KAAMa,IAC5B,IAATb,GAAc,cAAC,EAAD,CAAiBA,KAAMa,QCJ7BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5071f269.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MovieScreen = ({ title }) => {\n  return (\n    <>\n      <video className=\"videoTag\" autoPlay loop muted>\n        <source\n          src={process.env.PUBLIC_URL + `/movies/${title}.mp4`}\n          type=\"video/mp4\"\n        />\n      </video>\n    </>\n  );\n};\n\nexport default MovieScreen;\n","import React, { useState } from \"react\";\nimport MovieScreen from \"./MovieScreen\";\n\nconst ChristmasCard_1 = ({ card }) => {\n  const [switcz, setSwitcz] = useState(false);\n\n  const handleSetSwicz = () => {\n    setSwitcz(!switcz);\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <MovieScreen title=\"ENEA_swieta_1\" />\n        <div onClick={(handleSetSwicz, card)} className=\"switch on\">\n          <img\n            className={switcz ? \"switch\" : \"switch on\"}\n            src={process.env.PUBLIC_URL + `/images/off.svg`}\n            alt=\"off\"\n          />\n          <img\n            className={switcz ? \"switch on\" : \"switch\"}\n            src={process.env.PUBLIC_URL + `/images/on.svg`}\n            alt=\"on\"\n          />\n        </div>\n        <h1 onClick={card}>włącz świąteczną energię</h1>\n      </div>\n    </>\n  );\n};\n\nexport default ChristmasCard_1;\n","import React, { useEffect } from \"react\";\nimport MovieScreen from \"./MovieScreen\";\n\nconst ChristmasCard_2 = ({ card }) => {\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      card();\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }, 5000);\n  }, []);\n  return (\n    <>\n      <div className=\"container\">\n        <MovieScreen title=\"ENEA_swieta_2\" />\n      </div>\n    </>\n  );\n};\n\nexport default ChristmasCard_2;\n","import React from \"react\";\nimport MovieScreen from \"./MovieScreen\";\n\nconst ChristmasCard_3 = ({ card }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <MovieScreen title=\"ENEA_swieta_3\" />\n      </div>\n    </>\n  );\n};\n\nexport default ChristmasCard_3;\n","import React, { useState } from \"react\";\nimport ChristmasCard_1 from \"./components/ChristmasCard_1\";\nimport ChristmasCard_2 from \"./components/ChristmasCard_2\";\nimport ChristmasCard_3 from \"./components/ChristmasCard_3\";\nimport \"./components/css/App.css\";\n\nfunction App() {\n  const [card, setCard] = useState(1);\n\n  const handleCardNumber = () => {\n    setCard((prevState) => prevState + 1);\n  };\n  return (\n    <>\n      {card === 1 && <ChristmasCard_1 card={handleCardNumber} />}\n      {card === 2 && <ChristmasCard_2 card={handleCardNumber} />}\n      {card === 3 && <ChristmasCard_3 card={handleCardNumber} />}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}